syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.wso2.micro.integrator.grpc.proto";
option java_outer_classname = "MIProto";

package org.wso2.micro.integrator.grpc.proto;

import "google/protobuf/struct.proto";

service MIService {
  rpc dataExchange(stream DataRequest) returns (stream DataResponse){};
}

message DataResponse {
  enum ResponseType{
    SERVER = 0;
    APILIST = 1;
    API = 2;
    ENDPOINTLIST = 3;
    ENDPOINT = 4;
    CARBONAPPLIST = 5;
    CARBONAPP = 6;
    CONNECTORLIST = 7;
    CONNECTOR = 8;
    DATASERVICELIST = 9;
    DATASERVICE = 10;
    INBOUNDENDPOINTLIST = 11;
    INBOUNDENDPOINT = 12;
    LOGFILELIST = 13;
    LOGFILEDOWNLOAD = 14;
    LOGCONFIGLIST = 15;
    LOGUPDATE = 16;
    MESSAGEPROCESSORSLIST = 17;
    MESSAGEPROCESSOR = 18;
    MESSAGESTORELIST = 19;
    MESSAGESTORE =20;
    PROXYSERVICELIST = 21;
    PROXYSERVICE = 22;
    ROLELIST = 23;
    ROLE = 24;
    SEQUENCELIST = 25;
    SEQUENCE = 26;
    TASKLIST = 27;
    TASK = 28;
    TEMPLATELIST = 29;
  }
  ResponseType responseType = 1;
  oneof responses{
    string response = 2;
    UpdateConfigLog updateConfigLog = 3;
  }
}

message DataRequest {
  oneof requests{
    Error error = 1;
    Message message = 2;
    Handshake handshake = 3;
    ServerInfo serverInfo = 4;
    APIList apiList= 5;
    API api = 6;
    EndpointList endpointList = 7;
    Endpoint endpoint = 8;
    CarbonAppList carbonAppList = 9;
    CarbonApp carbonApp = 10;
    ConnectorList connectorList = 11;
    Connector connector = 12;
    DataServiceList dataServiceList = 13;
    DataService dataService = 14;
    InboundEndpointList inboundEndpointList = 15;
    InboundEndpoint inboundEndpoint= 21; //change the order later
    LogFileList logFileList = 16;
    LogConfigList logConfigList = 17;
    MessageProcessorsList messageProcessorsList = 18;
    MessageProcessor messageProcessor = 22; //change the order later
    MessageStoreList messageStoreList = 19;
    MessageStore messageStore = 23; //change the order later
    ProxyServiceList proxyServiceList = 20;
    ProxyService proxyService = 24;
    RoleList roleList = 25;
    Role role = 26;
    SequenceList sequenceList = 27;
    Sequence sequence = 28;
    TaskList taskList = 29;
    Task task = 30;
    TemplateList templateList = 31;
  }
}

message UpdateConfigLog{
  string loggerName = 1;
  string loggerClass = 2;
  string logLevel = 3;
}

message Handshake{
  string groupID = 1;
  string nodeID = 2;
}

message APIList{
  int32 count = 1;
  repeated APISummary apiSummaries = 2;
}

message APISummary{
  string tracing = 1;
  string name = 2;
  string url = 3;
}

message API{
  string tracing = 1;
  string stats = 2;
  int32 port = 3;
  string configuration = 4;
  string name = 5;
  string context = 6;
  repeated Resource resources = 7;
  string version = 8;
  string host = 9;
}

message Resource{
  repeated string methods = 1;
  string url = 2;
}

message ServerInfo{
  string productVersion = 1;
  string osVersion = 2;
  string javaVersion = 3;
  string carbonHome = 4;
  string javaVendor = 5;
  string osName = 6;
  string productName = 7;
  string javaHome = 8;
}

message EndpointList{
  int32 count = 1;
  repeated EndpointSummary endPointSummaries = 2;
}

message EndpointSummary{
  string name = 1;
  string type = 2;
  bool  isActive = 3;
}

message Endpoint{
  string tracing = 1;
  string method = 2;
  EPAdvanced epAdvanced = 3;
  string configuration = 4;
  string uriTemplate = 5;
  string name = 6;
  string type = 7;
  bool isActive = 9;
}

message EPAdvanced{
  SuspendState suspendState = 1;
  TimeoutState timeoutState = 2;
}

message SuspendState{
  repeated int32 errorCodes = 1;
  int64 maxDuration = 2;
  int64 initialDuration = 3;
}

message TimeoutState{
  repeated int32 errorCodes = 1;
  int32 retries = 2;
}

message Artifact{
  string name = 1;
  string type = 2;
}

message CarbonAppList{
  int32 totalCount = 1;
  int32 activeCount = 2;
  repeated CarbonApp activeList = 3;
  int32 faultyCount = 4;
  repeated CarbonApp faultyList = 5;
}

message CarbonApp{
  string name = 1;
  string version = 2;
  repeated Artifact artifacts = 3;
}

message Error{
  string message = 1;
}

message Message{
  string message = 1;
}

message ConnectorList{
  int32 count = 1;
  repeated Connector connectors = 2;
}

message Connector{
  string package = 1;
  string name = 2;
  string description = 3;
  string status = 4;
}

message DataServiceList{
  int32 count = 1;
  repeated DataServiceSummary dataServicesSummaries = 2;
}

message DataServiceSummary{
  string name = 1;
  string wsdl1_1 = 2;
  string wsdl1_0 = 3;
}

message DataService{
  repeated Operation operations = 1;
  string configuration = 2;
  string serviceGroupName = 3;
  repeated DataServiceResource resources = 4;
  string serviceDescription = 5;
  string wsdl1_1 = 6;
  string wsdl1_0 = 7;
  string serviceName = 8;
  repeated Query queries = 9;
  repeated DSDataSource dsDataSources = 10;
  string swagger_url = 11;
}

message Query{
  string id = 1;
  string dataSourceId = 2;
  string namespace = 3;
}

message DSDataSource{
  string dataSourceId = 1;
  string dataSourceType = 2;
  map<string, string> dataSourceProperties = 3;
}

message DataServiceResource{
  string resourcePath = 1;
  string resourceMethod = 2;
  string resourceQuery = 3;
  repeated QueryParam queryParams = 4;
}

message QueryParam{
  string name = 1;
  string sqlType = 2;
  string type = 3;
  string paramType = 4;
  repeated int32 ordinals = 5;
  repeated ParamValue arrayValues = 6;
  repeated Validator validators = 7;
  string structType = 8;
  bool forceDefault = 9;
  bool optional = 10;
  int32 valueType = 11;
  string scalarValue = 12;
}

message ParamValue{
  int32 valueType = 1;
  string scalarValue = 2;
}

message Validator{
  oneof validator{
    ArrayTypeValidator arrayTypeValidator = 1;
    DoubleRangeValidator doubleRangeValidator = 2;
    LengthValidator lengthValidator = 3;
    LongRangeValidator longRangeValidator = 4;
    PatternValidator patternValidator = 5;
    ScalarTypeValidator scalarTypeValidator = 6;
  }
}

message DataSourceList{
  int32 count = 1;
  repeated DataSourceSummary dataSourcesSummaries = 2;
}

message DataSourceSummary{
  string name = 1;
  string type = 2;
}

message DataSource{
  DSConfigurationParameters dsConfigurationParameters = 1;
  string driverClass = 2;
  string name = 3;
  string description = 4;
  string type = 5;
  string url = 6;
  string status = 7;
  string username = 8;
  string configuration = 9;
}

message DSConfigurationParameters{
  bool defaultAutoCommit = 1;
  bool defaultReadOnly = 2;
  bool removeAbandoned = 3;
  string validationQuery = 4;
  int32 validationTimeout = 5;
  int32 maxActive = 6;
  int32 maxIdle = 7;
  int32 maxWait = 8;
  int64 maxAge = 9;
}

message ArrayTypeValidator{}
message DoubleRangeValidator{
  double minimum = 1;
  double maximum = 2;
  bool hasMin = 3;
  bool hasMax = 4;
  string message = 5;
}
message LengthValidator{
  int32 minimum = 1;
  int32 maximum = 2;
  bool hasMin = 3;
  bool hasMax = 4;
  string message = 5;
}
message LongRangeValidator{
  int64 minimum = 1;
  int64 maximum = 2;
  bool hasMin = 3;
  bool hasMax = 4;
  string message = 5;
}
message PatternValidator{
  string message = 1;
  string pattern = 2;
}
message ScalarTypeValidator{}

message Operation{
  string operationName = 1;
  string queryName = 2;
  repeated QueryParam queryParams = 3;
}

message InboundEndpointList{
  int32 count = 1;
  repeated InboundEndpointSummary inboundEndpointsSummaries = 2;
}

message InboundEndpointSummary{
  string protocol = 1;
  string name = 2;
}

message InboundEndpoint{
  string protocol = 1;
  string name = 2;
  string sequence = 3;
  string error = 4;
  string statisticsState = 5;
  string tracing = 6;
  string configuration = 7;
  repeated Param params = 8;
}

message Param{
  string name = 1;
  string value = 2;
}

message LogFileList{
  int32 count = 1;
  repeated LogFile logFiles = 2;
}

message LogFile{
  string name = 1;
  string size = 2;
}

message LogConfigList{
  int32 count = 1;
  repeated LogConfig logConfigs = 2;
}

message LogConfig{
  string loggerName = 1;
  string componentName = 2;
  string level = 3;
}

message MessageProcessorsList{
  int32 count = 1;
  repeated MessageProcessorSummary messageProcessorSummaries = 2;
}

message MessageProcessorSummary{
  string name = 1;
  string type = 2;
  string status = 3;
}

message MessageProcessor{
  string name = 1;
  string type = 2;
  string container = 3;
  string fileName = 4;
  //map<string, string> parameters = 5;
  string messageStore = 6;
  string status = 7;
  string configuration = 8;
}

message MessageStoreList{
  int32 count = 1;
  repeated MessageStoreSummary messageStoreSummaries = 2;
}

message MessageStoreSummary{
  string name = 1;
  string type = 2;
  int32 size = 3;
}

message MessageStore{
  string name = 1;
  int32 storeSize = 2;
  string container = 3;
  string fileName = 4;
  //map<string, string> parameters = 5;
  string status = 6;
  string configuration = 7;
}

message ProxyServiceList{
  int32 count = 1;
  repeated ProxyServiceSummary proxyServiceSummaries = 2;
}

message ProxyServiceSummary{
  string name = 1;
  string wsdl11 = 2;
  string wsdl20 = 3;
}

message ProxyService{
  string name = 1;
  string wsdl11 = 2;
  string wsdl20 = 3;
  string stats = 4;
  string tracing = 5;
  string configuration = 6;
  repeated string eprs = 7;
  bool isRunning = 8;
}

message ProxySwitch{
  string name = 1;
  string status = 2;
}

message RoleList{
  int32 count = 1;
  repeated string roles = 2;
}

message Role{
  string roleName = 1;
  repeated string users = 2;
}

message SequenceList{
  int32 count = 1;
  repeated SequenceSummary sequenceSummaries = 2;
}

message SequenceSummary{
  string name = 1;
  string container = 2;
  string statisticState = 3;
  string tracingState = 4;
}

message Sequence{
  string name = 1;
  string container = 2;
  string statisticsState = 3;
  string tracingState = 4;
  repeated string methods = 5;
  string configuration = 6;
}

message TaskList{
  int32 count = 1;
  repeated string name = 2;
}

message Task{
  string name = 1;
  string taskGroup = 2;
  string taskImplementation = 3;
  string cronExpression = 4;
  int32 triggerCount = 5;
  int64 triggerInterval = 6;
  string triggerType = 7;
  map<string, string> properties = 8;
  string configuration = 9;
}

message TemplateList{
  int32 count = 1;
  repeated TemplateSummary templateSummaries = 2;
}

message TemplateTypeList{
  int32 count = 1;
  repeated TemplateName templateNames = 2;
}

message TemplateSummary{
  oneof templates{
    EndpointTemplateSummary endpointTemplateSummary = 1;
    SequenceTemplateSummary sequenceTemplateSummary = 2;
  }
}

message EndpointTemplateSummary{
  string name = 1;
  repeated string parameters = 2;
  string configuration = 3;
  string templateType = 4;
}

message SequenceTemplateSummary{
  string name = 1;
  repeated TemplateParam parameters = 2;
  string configuration = 3;
  string templateType = 4;
}

message TemplateParam{
  string name = 1;
  string defaultValue = 2;
  bool isMandatory = 3;
}

message TemplateName{
  string name = 1;
}